{"version":3,"sources":["components/About.js","components/Footer.js","components/Navbar.js","components/Record.js","components/Texteditor.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","Footer","props","style","background","mode","Navbar","type","id","to","title","onClick","toggleMode","htmlFor","Record","a","color","height","borderTopLeftRadius","borderTopRightRadius","width","margin","borderRadius","border","length","Texteditor","useState","text","setText","countWords","str","replace","split","filter","element","value","onChange","event","target","rows","placeholder","toUpperCase","toLowerCase","trim","App","setMode","document","body","backgroundColor","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.991ff302.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center my-3\">This is Made by - Adil Khan</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer = (props) => {\r\n    return (\r\n        <>\r\n            <footer style={{background : props.mode === 'light' ? \"#ff8c00ad\" : \"#212529\"}} className={`foot page-footer font-small blue mt-4 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                <div className=\"footer-copyright text-center py-3\">Â© 2021 Copyright by Adil Khan\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './App.css'\r\n\r\nexport const Navbar = (props) => {\r\n    return (\r\n        <>\r\n            <nav style={{background : props.mode === 'light' ? \"#ff8c00ad\" : \"#212529\"}} className={`nav-grid navbar navbar-expand-lg navbar-${props.mode}`} data-toggle=\"affix\">\r\n                <div className=\"mx-auto d-block flex-sm-nowrap title\">\r\n                    <button className=\"navbar-toggler \" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse text-center\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"./About\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={`form-check form-switch mx-3 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Record = (props) => {\r\n    const a = {\r\n        background : props.mode === 'dark' ? 'black' : 'black',\r\n        color: props.mode === 'dark' ? 'white' : 'white',\r\n        height : \"60px\",\r\n        borderTopLeftRadius : \"8px\",\r\n        borderTopRightRadius : \"8px\"\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"mb-5 card\" style={{width: \"15rem\",margin: \"17px 17px 17px 0\",borderRadius : \"10px\", border : props.mode === 'light' ? '2px solid black' : '2px solid white'}}>\r\n                <div style={a} className=\"card-body p-0\">\r\n                    <h4 className=\"card-title text-center pt-3\">{props.title}</h4><hr/>\r\n                </div>\r\n                <p className={`card-text text-center pb-3 pt-3 text-${props.mode === 'dark' ? 'black' : 'black'}`}>{props.length}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Record } from './Record';\r\n\r\nexport const Texteditor = (props) => {\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    } \r\n    \r\n    const convertToUpper = () => {\r\n        setText(text.toUpperCase());\r\n    }\r\n\r\n    const convertToLower = () => {\r\n        setText(text.toLowerCase());\r\n    }\r\n\r\n    const clearText = () => {\r\n        if(text !== ''){\r\n            setText('');\r\n        }\r\n    }\r\n\r\n    const removeSpaces = (str) => {\r\n        setText(str.replace(/\\s+/g, ' ').trim());\r\n    }\r\n\r\n    function countWords(str) {\r\n        str = str.replace(/(^\\s*)|(\\s*$)/gi,\"\");\r\n        str = str.replace(/[ ]{2,}/gi,\" \");\r\n        str = str.replace(/\\n /,\"\\n\");\r\n        return str.split(/\\s+/).filter((element)=>{return element.length !== 0}).length;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"body\">\r\n                <h1 className=\"mb-4 mt-2\">Enter your text below : </h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className={`form-control rounded-3 bg-${props.mode === 'dark' ? 'black' : 'white'} text-${props.mode === 'dark' ? 'white' : 'black'}`} id=\"exampleFormControlTextarea1\" value={text} onChange={handleChange} rows=\"5\" placeholder=\"Enter your text here...\"></textarea>\r\n                    <button type=\"button\" className=\"btn btn-primary mt-3\" onClick={convertToUpper}>UPPERCASE</button>\r\n                    <button type=\"button\" className=\"btn btn-primary mt-3 mx-2\" onClick={convertToLower}>lowercase</button>\r\n                    <button type=\"button\" className=\"btn btn-primary mt-3 mx-2\" onClick = {() => {removeSpaces(text)}}>Remove Spaces</button>\r\n                    <button type=\"button\" className=\"btn btn-primary mt-3 mx-2\" onClick={clearText}>Clear</button>\r\n                </div>\r\n\r\n                <div className=\"d-flex flex-wrap\">\r\n                    <Record mode={props.mode} title = \"Characters\"  length={text.length} />\r\n                    <Record mode={props.mode} title = \"Words\" length={countWords(text)}/>\r\n                    <Record mode={props.mode} title = \"Reading Time\" length={0.48 * countWords(text) + \" Sec\"}/>\r\n                </div>\r\n\r\n                <div className=\"container p-0\">\r\n                    <h2>You can Read from below</h2>\r\n                    {text === \"\" ? 'Enter text above to preview it' : text}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\nimport { About } from './components/About';\nimport { Footer } from './components/Footer';\nimport { Navbar } from \"./components/Navbar\";\nimport { Texteditor } from './components/Texteditor';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\nconst App = () => {\n  const [mode, setMode] = useState('light');\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'gray';\n      document.body.style.color = 'white';\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar title = \"Text Manupulation\" mode = {mode} toggleMode={toggleMode}/>\n        <div className=\"container\">\n          <Switch>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/\">\n                <Texteditor mode = {mode} toggleMode={toggleMode} />\n              </Route>\n          </Switch>\n        </div>\n        <Footer mode = {mode} toggleMode={toggleMode}/>\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}